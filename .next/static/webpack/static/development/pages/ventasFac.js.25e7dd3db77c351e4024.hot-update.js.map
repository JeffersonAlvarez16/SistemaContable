{"version":3,"file":"static/webpack/static\\development\\pages\\ventasFac.js.25e7dd3db77c351e4024.hot-update.js","sources":["webpack:///./components/components/ventas/HistorialVentas_01.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport MenuHerramientas from '../menus/MenuHerramientas'\r\nimport ItemMenuHerramienta from '../menus/ItemMenuHerramienta'\r\nimport TablaNormal from '../tables/TableNormal'\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport LocalPrintshopIcon from '@material-ui/icons/LocalPrintshop';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SwapHorizIcon from '@material-ui/icons/SwapHoriz';\r\nimport SubtitlesIcon from '@material-ui/icons/Subtitles';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtm';\r\nimport CreditCardIcon from '@material-ui/icons/CreditCard';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\r\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n//firebase \r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth'\r\n\r\nimport funtions from '../../../utils/funtions';\r\n\r\n//dialogs\r\nimport setSnackBars from '../../plugins/setSnackBars';\r\nimport ReturnTextTable from '../tables/ReturnTextTable';\r\nimport Search from '../Search';\r\n\r\nimport { CircularProgress, Chip, Avatar } from '@material-ui/core';\r\n\r\nimport ReactToPrint from \"react-to-print\";\r\nimport colors from '../../../utils/colors';\r\nimport ErrorEstado from '../../plugins/plugins/ErrorEstado';\r\n\r\nimport ModalContainerNormal from '../../modals_container/ModalContainerNormal';\r\nimport EmitirFacturaModal from '../../plugins/EmitirFacturaModal';\r\n\r\nclass HistorialVentas_01 extends Component {\r\n\r\n    state = {\r\n        listaVentas: [],\r\n        estadoTabla: 'cargando',\r\n        rowslistaVentas: [\r\n            { id: 'accions', numeric: false, disablePadding: true, label: '' },\r\n            { id: 'factura_emitida', numeric: false, disablePadding: true, label: 'Estado' },\r\n            { id: 'cliente', numeric: true, disablePadding: false, label: 'Cliente' },\r\n            { id: 'productos', numeric: true, disablePadding: false, label: 'Productos' },\r\n            { id: 'tipo_pago', numeric: true, disablePadding: false, label: 'Tipo de pago' },\r\n            { id: 'subtotal', numeric: true, disablePadding: false, label: 'SubTotal' },\r\n            { id: 'total', numeric: true, disablePadding: false, label: 'Total' },\r\n            { id: 'iva', numeric: true, disablePadding: false, label: 'Precio Iva' },\r\n            { id: 'descuento', numeric: true, disablePadding: false, label: 'Descuento' },\r\n            { id: 'dinero_resibido', numeric: true, disablePadding: false, label: 'Dinero recibido' },\r\n            { id: 'cambio', numeric: true, disablePadding: false, label: 'Cambio/Vuelto' },\r\n            { id: 'acreditado', numeric: true, disablePadding: false, label: 'Dinero acreditado' },\r\n            { id: 'codigo', numeric: false, disablePadding: true, label: 'Codigo' },\r\n            { id: 'observacion', numeric: true, disablePadding: false, label: 'ObservaciÃ³n' },\r\n            { id: 'empleado', numeric: true, disablePadding: false, label: 'Empleado' },\r\n            { id: 'fecha_venta', numeric: true, disablePadding: false, label: 'Fecha de venta' },\r\n            { id: 'hora_venta', numeric: true, disablePadding: false, label: 'Hora de venta' },\r\n        ],\r\n        estadoTabla: 'llena',\r\n\r\n        //modals\r\n        openModalFullScreen: false,\r\n        estadoModalSimple: false,\r\n        estadoModalDeleteActivarDesactivar: 'eliminar',\r\n        //item Selecionado\r\n        itemsSeleccionados: [],\r\n        //uid de usuario\r\n        usuarioUID: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        var fehca = funtions.obtenerFechaActual().toString().split('-')\r\n        var fechaNueva = `${fehca[2]}-${fehca[1]}-${fehca[0]}`\r\n        this.setState({\r\n            fechaActual: funtions.obtenerFechaActual()\r\n        })\r\n        this.obteberCajaSeleccionada()\r\n    }\r\n\r\n    obtenerDataBaseDatos = (fecha) => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                var db = firebase.database();\r\n                var ventasRef = db.ref('users/' + user.uid + '/ventas').orderByChild('fecha_venta').equalTo(fecha)\r\n                var vetasReDevueltas = db.ref('users/' + user.uid + '/lista_ventas/ventas_devueltas').orderByChild('fecha_venta').equalTo(fecha)\r\n                ventasRef.on('value', (snapshot) => {\r\n                    vetasReDevueltas.on('value', (snap) => {\r\n                        if (snapshot.val() || snap.val()) {\r\n                            this.setState({\r\n                                listaVentas: [],\r\n                                listaVentasTemporal: [],\r\n                                estadoTabla: 'cargando'\r\n                            })\r\n                            var listaVentas = funtions.snapshotToArray(snapshot)\r\n                            var listaVentasDevueltas = funtions.snapshotToArray(snap)\r\n                            var listaFinal = listaVentas.concat(listaVentasDevueltas)\r\n                            var filterList = listaFinal.sort((a, b) => {\r\n                                a = new Date(a.order);\r\n                                b = new Date(b.order);\r\n                                return a > b ? -1 : a < b ? 1 : 0;\r\n                            })\r\n                            this.setState({\r\n                                listaVentas: filterList,\r\n                                listaVentasTemporal: filterList,\r\n                                estadoTabla: 'llena'\r\n                            })\r\n                        } else {\r\n                            this.setState({\r\n                                listaVentas: [],\r\n                                listaVentasTemporal: [],\r\n                                estadoTabla: 'vacio'\r\n                            })\r\n                        }\r\n                    })\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    obteberCajaSeleccionada = () => {\r\n        var db = firebase.database();\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                var db = firebase.database();\r\n                var operacionVentaRefCaja = db.ref('users/' + firebase.auth().currentUser.uid + '/caja/cajas_abiertas_usuario')\r\n                operacionVentaRefCaja.on('value', (snap) => {\r\n                    if (snap.val()) {\r\n                        var caja = funtions.snapshotToArray(snap).filter(it => it.usuario === this.props.usuario.code)[0]\r\n                        if (caja != null) {\r\n                            this.setState({\r\n                                cajaSeleccionada: caja,\r\n                                estadoCaja: caja.estado,\r\n                            })\r\n                            this.obtenerDataBaseDatos(this.state.fechaActual)\r\n                        } else {\r\n                            this.setState({\r\n                                cajaSeleccionada: null,\r\n                                estadoCaja: false,\r\n                                estadoTabla: 'vacio'\r\n                            })\r\n                        }\r\n                    } else {\r\n                        this.setState({\r\n                            cajaSeleccionada: null,\r\n                            estadoCaja: false,\r\n                            estadoTabla: 'vacio'\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    cambiarListaPorFecha = fecha => {\r\n        this.setState({\r\n            fechaActual: fecha,\r\n            estadoTabla: 'cargando'\r\n        })\r\n        setTimeout(() => {\r\n            this.obtenerDataBaseDatos(fecha)\r\n        }, 200)\r\n    }\r\n\r\n    handleGetData = (n, item) => {\r\n        if (item.id === 'codigo') {\r\n            return n.codigo\r\n        }\r\n\r\n        if (item.id === 'accions') {\r\n            return <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                {\r\n                    n.urlpdf != 'genererando' &&\r\n                    <Tooltip title=\"Descargar pdf\">\r\n                        <IconButton onClick={() => {\r\n                            window.open(\r\n                                n.urlpdf,\r\n                                '_blank'\r\n                            );\r\n                        }}\r\n                        >\r\n                            <PictureAsPdfIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                }\r\n                {\r\n                    n.urlpdf === 'genererando' &&\r\n                    <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                        <div style={{ color: '#42A5F5', display: 'flex', alignItems: 'center' }}>Pdf</div>\r\n                    </div>\r\n                }\r\n            </div>\r\n        }\r\n\r\n        if (item.id === 'cliente') {\r\n            return n.cliente === 'Consumidor Final' ? n.cliente : <>\r\n                <ReturnTextTable\r\n                    referencia=\"clientes\"\r\n                    codigo={n.cliente.codigo}\r\n                    datoTraido=\"nombre\"\r\n                    estado={true}\r\n                />\r\n            </>\r\n        }\r\n\r\n        if (item.id === 'productos') {\r\n            return n.productos.map(item => {\r\n                return <div style={{\r\n                    display: 'flex',\r\n                    flexDirection: 'row'\r\n                }}>\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                width: 'max-content',\r\n                                paddingLeft: 10,\r\n                                paddingRight: 10,\r\n                                paddingTop: 0,\r\n                                paddingBottom: 0,\r\n                                height: 25\r\n                            }}>\r\n                                {item.cantidad}\r\n                            </Avatar>\r\n                        }\r\n                        label={\r\n                            <ReturnTextTable\r\n                                referencia=\"productos\"\r\n                                codigo={item.codigo}\r\n                                datoTraido=\"descripcion_producto\"\r\n                                estado={true}\r\n                            />\r\n                        }\r\n                        clickable\r\n                        color=\"inherit\"\r\n                        style={{ margin: 1, height: 25, background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                </div>\r\n            })\r\n        }\r\n\r\n        if (item.id === 'subtotal') {\r\n            return <div style={{ width: 'max-content' }}>{n.subtotal}</div>\r\n        }\r\n\r\n        if (item.id === 'tipo_pago') {\r\n            return <div style={{ width: 'max-content' }}>\r\n                {\r\n                    n.tipo_pago === 'cheque' &&\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                padding: 1,\r\n                                background: colors.getColorPrymaryDarkRed300()\r\n                            }}>\r\n                                <SubtitlesIcon style={{ fontSize: 20, color: colors.getColorWhite() }} />\r\n                            </Avatar>\r\n                        }\r\n                        label={'Con cheque'}\r\n                        clickable\r\n                        style={{ background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                }\r\n                {\r\n                    n.tipo_pago === 'transferencia' &&\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                padding: 1,\r\n                                background: colors.getColorPrymaryDarkDeepPurple300()\r\n                            }}>\r\n                                <SwapHorizIcon style={{ fontSize: 20, color: colors.getColorWhite() }} />\r\n                            </Avatar>\r\n                        }\r\n                        label={'Por transferencia bancaria'}\r\n                        clickable\r\n                        style={{ background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                }\r\n                {\r\n                    n.tipo_pago === 'efectivo' &&\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                padding: 1,\r\n                                background: colors.getColorPrymaryDark()\r\n                            }}>\r\n                                <AttachMoneyIcon style={{ fontSize: 20, color: colors.getColorWhite() }} />\r\n                            </Avatar>\r\n                        }\r\n                        label={'En efectivo'}\r\n                        clickable\r\n                        style={{ background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                }\r\n                {\r\n                    n.tipo_pago === 'credito' &&\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                padding: 1,\r\n                                background: colors.getColorPrymaryDarkAmber300()\r\n                            }}>\r\n                                <LocalAtmIcon style={{ fontSize: 20, color: colors.getColorWhite() }} />\r\n                            </Avatar>\r\n                        }\r\n                        label={'A crÃ©dito'}\r\n                        clickable\r\n                        style={{ background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                }\r\n                {\r\n                    n.tipo_pago === 'tarjeta-credito' &&\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                padding: 1,\r\n                                background: colors.getColorPrymaryDarkGreen300()\r\n                            }}>\r\n                                <CreditCardIcon style={{ fontSize: 20, color: colors.getColorWhite() }} />\r\n                            </Avatar>\r\n                        }\r\n                        label={'Con tarjeta de crÃ©dito'}\r\n                        clickable\r\n                        style={{ background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                }\r\n                {\r\n                    n.tipo_pago === 'tarjeta-debito' &&\r\n                    <Chip\r\n                        avatar={\r\n                            <Avatar style={{\r\n                                padding: 1,\r\n                                background: colors.getColorPrymaryDarkBlue300()\r\n                            }}>\r\n                                <PaymentIcon style={{ fontSize: 20, color: colors.getColorWhite() }} />\r\n                            </Avatar>\r\n                        }\r\n                        label={'Con tarjeta de dÃ©bito'}\r\n                        clickable\r\n                        style={{ background: colors.getColorPrymaryGrey200() }}\r\n                    />\r\n                }\r\n            </div>\r\n        }\r\n\r\n        if (item.id === 'factura_emitida') {\r\n            return n.cliente === 'Consumidor Final' ?\r\n                <div style={{ display: 'flex', flexDirection: 'row', width: 'max-content' }}>\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>Consumidor Final</div>\r\n                </div>\r\n                :\r\n                <div style={{ width: 'max-content', display: 'flex', flexDirection: 'row', alignItems: 'center' }}>\r\n                    {\r\n                        n.factura_emitida === 'emitida' &&\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <IconButton disabled>\r\n                                <DoneAllIcon style={{ color: '#00c853' }} fontSize=\"small\" />\r\n                            </IconButton>\r\n                            <div style={{ color: '#00c853', display: 'flex', alignItems: 'center' }}>Emitida</div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        n.factura_emitida === 'devuelta' &&\r\n                        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n                            <div style={{ color: colors.getColorPrymaryRed300(), display: 'flex', alignItems: 'center' }}>cancelada</div>\r\n                        </div>\r\n                    }\r\n                    {\r\n                        n.factura_emitida === 'no_emitida' &&\r\n                        <Tooltip title=\"Emitir Factura\">\r\n                            <IconButton onClick={() => {\r\n                                this.setState({\r\n                                    estadoacciones: 'emitir_factura'\r\n                                })\r\n                                setTimeout(() => {\r\n                                    this.comprobarUsuario(n)\r\n                                }, 100)\r\n                            }}>\r\n                                <InputIcon color='primary' fontSize=\"small\" />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    }\r\n                    {\r\n                        n.factura_emitida === 'reenviar' &&\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>Reenviar</div>\r\n                    }\r\n                    {\r\n                        n.factura_emitida === 'pendiente' &&\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>Pendiente</div>\r\n                    }\r\n                    {\r\n                        n.factura_emitida === 'error' &&\r\n                        <div style={{ display: 'flex', alignItems: 'center' }}>Error al emitir</div>\r\n                    }\r\n                </div >\r\n        }\r\n\r\n        if (item.id === 'total') {\r\n            return <div style={{ width: 'max-content' }}>\r\n                <Chip\r\n                    label={<div style={{ color: colors.getColorWhite() }}>{n.total}</div>}\r\n                    clickable\r\n                    style={{ background: colors.getColorPrymary() }}\r\n                />\r\n            </div>\r\n        }\r\n\r\n        if (item.id === 'iva') {\r\n            return <div style={{ width: 'max-content' }}>{n.iva}</div>\r\n        }\r\n\r\n        if (item.id === 'observacion') {\r\n            return <div style={{ width: 'max-content' }}>{n.observacion}</div>\r\n        }\r\n\r\n        if (item.id === 'dinero_resibido') {\r\n            return <div style={{ width: 'max-content' }}>{n.dinero_resibido}</div>\r\n        }\r\n\r\n        if (item.id === 'cambio') {\r\n            return <div style={{ width: 'max-content' }}>{n.cambio}</div>\r\n        }\r\n\r\n        if (item.id === 'acreditado') {\r\n            return <div style={{ width: 'max-content' }}>{n.valor_acreditado}</div>\r\n        }\r\n\r\n        if (item.id === 'fecha_venta') {\r\n            return <div style={{ width: 'max-content' }}>{n.fecha_venta}</div>\r\n        }\r\n\r\n        if (item.id === 'hora_venta') {\r\n            return <div style={{ width: 'max-content' }}>{n.hora_venta}</div>\r\n        }\r\n\r\n        if (item.id === 'descuento') {\r\n            return <div style={{ width: 'max-content' }}>{n.descuento}</div>\r\n        }\r\n\r\n        if (item.id === 'empleado') {\r\n            return <ReturnTextTable\r\n                referencia=\"usuarios\"\r\n                codigo={n.empleado}\r\n                datoTraido=\"nombre\"\r\n                estado={true}\r\n            />\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getColorActivadoDesactivado = (estado, texto) =>\r\n        estado === false ?\r\n            <div style={{ color: 'rgba(0,0,0,0.5)' }}>\r\n                {texto}\r\n            </div>\r\n            : texto\r\n\r\n    comprobarUsuario = (item) => {\r\n        this.setState({\r\n            codigoEmitirFactura: item.codigo,\r\n            estadoModalEmitirFactura: true,\r\n        })\r\n    }\r\n\r\n    recuperarJsonFactura = codigo => {\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user) {\r\n                var db = firebase.database();\r\n                var productosRef = db.ref('users/' + user.uid + '/facturas_ventas/' + codigo);\r\n                productosRef.on('value', (snapshot) => {\r\n                    if (snapshot.val()) {\r\n                        this.postSet(user.uid, snapshot.val(), codigo)\r\n                        var venteRef = db.ref('users/' + user.uid + '/ventas/' + codigo);\r\n                        venteRef.update({\r\n                            factura_emitida: 'pendiente'\r\n                        })\r\n                        //setSnackBars.openSnack('success', 'rootSnackBar', 'Factura emitida con exito', 2000)\r\n                    }\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    postSet = async (uidUser, jsonData, codigo) => {\r\n        const rawResponse = await fetch('https://stormy-bayou-19844.herokuapp.com/generarfactura', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'id': uidUser,\r\n                'codigo': codigo,\r\n            },\r\n            body: JSON.stringify(jsonData)\r\n        })\r\n    }\r\n\r\n    handleSearch = (codigo) => {\r\n        this.setState({ listaVentas: [], estadoTabla: 'cargando' })\r\n        funtions.setTime(300, () => {\r\n            let array = funtions.filterObjectsCodigo(this.state.listaVentasTemporal, codigo)\r\n            if (array.length > 0) {\r\n                this.setState({ estadoTabla: 'llena' })\r\n            } else {\r\n                this.setState({ estadoTabla: 'sin_resultados' })\r\n            }\r\n            this.setState({\r\n                listaVentas: array\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MenuHerramientas>\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <TextField\r\n                            id=\"datetime-local\"\r\n                            type=\"date\"\r\n                            defaultValue={funtions.obtenerFechaActual()}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                            onChange={e => this.cambiarListaPorFecha(e.target.value)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{ flex: 0.95 }}></div>\r\n\r\n                    <Search\r\n                        id='buscar-cliente-clientes'\r\n                        textoSearch=\"Buscar...\"\r\n                        textoTooltip=\"Buscar venta\"\r\n                        handleSearch={this.handleSearch}\r\n                    />\r\n                </MenuHerramientas>\r\n\r\n                <Divider />\r\n\r\n                <TablaNormal\r\n                    textoTitleP=\"Ventas Canceladas\"\r\n                    textoTitleS=\"Venta\"\r\n                    selectedItems={true}\r\n                    toolbar={false}\r\n                    notTab={false}\r\n                    data={this.state.listaVentas}\r\n                    rows={this.state.rowslistaVentas}\r\n                    handleGetData={this.handleGetData}\r\n                    estadoTabla={this.state.estadoTabla}\r\n                    itemsSeleccionados={items => this.setState({ itemsSeleccionados: items })}\r\n                />\r\n\r\n                <ModalContainerNormal\r\n                    open={this.state.estadoModalEmitirFactura}\r\n                    handleClose={() => this.setState({ estadoModalEmitirFactura: false })}\r\n                >\r\n                    <EmitirFacturaModal\r\n                        handleClose={() => this.setState({ estadoModalEmitirFactura: false })}\r\n                        handleEmitir={() => {\r\n                            this.recuperarJsonFactura(this.state.codigoEmitirFactura)\r\n                            this.setState({ estadoModalEmitirFactura: false })\r\n                        }}\r\n                    />\r\n                </ModalContainerNormal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistorialVentas_01;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA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","sourceRoot":""}